
import keyboard
import os
from keyboard_bot import *
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import pyautogui
from config import TOKEN
from clear_cache import clear as clear_cache



bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)



@dp.message_handler(commands=['start'])
async def START(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id)
    await message.answer('<code>üéÜ –î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å</code>\n\n<b>–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–ø—é—Ç–µ—Ä—É</b>\n\n<i>by <a href="https://lolz.guru/threads/3526061">MAYFDEV</a></i>', parse_mode= types.ParseMode.HTML, reply_markup=remote)

async def SPACE(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id)
    keyboard.press_and_release('space')
    await message.answer('üîΩ')

async def RIGHT(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id)
    keyboard.press_and_release('right')
    await message.answer('‚è©')

async def LEFT(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id)
    keyboard.press_and_release('left') 
    await message.answer('‚è™')

async def SLEAP(message: types.Message):
    os.system("rundll32.exe powrprof.dll,SetSuspendState 0,1,0")
    await bot.delete_message(message.chat.id, message.message_id)
    clear_cache(dir = ".")
    await message.answer('üí§')
    raise SystemExit
    

async def SCREANSHOT(message: types.Message):
    screenshot_do = pyautogui.screenshot()
    screenshot_do.save("MayfDEV_screen.png")
    screenshot_file = open('MayfDEV_screen.png', 'rb')

    await bot.send_document(
        caption='–í–æ—Ç –≤–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç :)',
        document=screenshot_file,
        chat_id=message.chat.id
    )
    os.remove('MayfDEV_screen.png')

@dp.message_handler(content_types=['text'])
async def main(message : types.Message):
    if message.text == 'üîΩ –ü—Ä–æ–±–µ–ª':
        await SPACE(message)
    if message.text == '‚è© –ü–µ—Ä–µ–º–æ—Ç–∞—Ç—å –≤ –ø–µ—Ä–µ–¥':
        await RIGHT(message)
    if message.text == '‚è™  –ü–µ—Ä–µ–º–æ—Ç–∞—Ç—å –Ω–∞–∑–∞–¥':
        await LEFT(message)
    if message.text == 'üí§ –£–π—Ç–∏ –≤ —Å–æ–Ω':
        await SLEAP(message)
        return
    if message.text == 'üåÑ –°–∫—Ä–∏–Ω—à–æ—Ç':
        await SCREANSHOT(message)


if __name__ == '__main__':
    executor.start_polling(dp)